spring.application.name= eureka-client-article-service
server.port=8082
#eureka.client.serviceUrl.defaultZone=http://hyy:123456@localhost:8761/eureka/,http://hyy:123456@localhost:8762/eureka/
eureka.client.serviceUrl.defaultZone=http://hyy:123456@localhost:8761/eureka/
# 采用IP注册
eureka.instance.preferIpAddress=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#开启 Ribbon 的饥饿加载模式
ribbon.eager-load.enabled=true
#指定需要饥饿加载的服务名，也就是你需要调用的服务，若有多个则用逗号隔开。
ribbon.eager-load.clients=eureka-client-user-service

# 禁用 Eureka
#ribbon.eureka.enabled=false
# 禁用 Eureka 后手动配置服务地址
#eureka-client-user-service=localhost:8081,localhost:8083

# 请求连接的超时时间
#ribbon.ConnectTimeout=2000
# 请求处理的超时时间
#ribbon.ReadTimeout=5000

#也可以为每个Ribbon客户端设置不同的超时时间, 通过服务名称进行指定：
#eureka-client-user-service.ConnectTimeout=2000
#eureka-client-user-service.ReadTimeout=5000

# 最大连接数
#ribbon.MaxTotalConnections=500
# 每个host最大连接数
#ribbon.MaxConnectionsPerHost=500
#ribbon自带重试机制
#eureka-client-user-service.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RetryRule

#集成Spring Retry重试
# 对当前实例的重试次数
#ribbon.maxAutoRetries=1
# 切换实例的重试次数
#ribbon.maxAutoRetriesNextServer=3
# 对所有操作请求都进行重试
#ribbon.okToRetryOnAllOperations=true
# 对Http响应码进行重试
#ribbon.retryableStatusCodes=500,404,502

#feign日志级别
logging.level.com.hyy.eurekaclientarticleeservice.controller.UserRemoteClient=DEBUG
#开启压缩 只有当 Feign 的 Http Client 不是 okhttp3 的时候，压缩才会生效
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#压缩的类型
feign.compression.request.mime-types=text/xml,application/xml,application/json
#最小压缩值
feign.compression.request.min-request-size=2048